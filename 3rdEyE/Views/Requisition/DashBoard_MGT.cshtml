@model Tuple<List<_3rdEyE.Models.RequisitionTrip>, List<_3rdEyE.Models.RequisitionTrip>>
@{
    Layout = null;
}
@{
    List<string> NonVehicleTypes = new List<string> { "Troller Boat", "Hand Trolley", "Van", "Adjustment", "By Hand", "Cargo Ship" };
    string ConvertToDateTimeString(DateTime? dateTime)
    {
        return String.Format("{0:dd/MM HH:mm}", dateTime);
    }
    string MinimizeRegistrationNumber(string RegistrationNumberLarge)
    {
        var _display_registration_number = RegistrationNumberLarge;
        if (_display_registration_number.Contains(' '))
        {
            var RegistrationNumber_District = _display_registration_number.Split(' ')[0];
            _display_registration_number = _display_registration_number.Replace(RegistrationNumber_District, RegistrationNumber_District.Substring(0, 3));
        }
        else
        {
            var RegistrationNumber_District = _display_registration_number.Split('-')[0];
            _display_registration_number = _display_registration_number.Replace(RegistrationNumber_District, RegistrationNumber_District.Substring(0, 3));
        }


        _display_registration_number = _display_registration_number.Replace("METRO", "M");
        return _display_registration_number;
    }
}
@*base url: http://pqc.prangroup.com:8113/dashboard_md*@
<html style="height: auto; min-height: 100%;">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    @*<script src="dashboard_md_files/jquery.js"></script>*@
    <script src="~/Scripts/Custom/md_pran_dhashboard_files/jquery.js"></script>
    @*<script src="dashboard_md_files/bootstrap.js"></script>*@
    <script src="~/Scripts/Custom/md_pran_dhashboard_files/bootstrap.js"></script>
    @*<link rel="stylesheet" href="dashboard_md_files/bootstrap.css">*@
    <link href="~/Scripts/Custom/md_pran_dhashboard_files/bootstrap.css" rel="stylesheet" />
    @*<script src="dashboard_md_files/adminlte.js"></script>*@
    <script src="~/Scripts/Custom/md_pran_dhashboard_files/adminlte.js"></script>
    @*<link rel="stylesheet" href="dashboard_md_files/AdminLTE.css">*@
    <link href="~/Scripts/Custom/md_pran_dhashboard_files/AdminLTE.css" rel="stylesheet" />
    @*<script src="dashboard_md_files/Chart.js"></script>*@
    <script>
        var summury_chart_data_lebels = [];
        var summury_chart_data_assigned = [];
        var summury_chart_data_unassigned = [];
    </script>
    <style>

        * {
            font-size: 16px;
        }

        .span-legend {
            content: "";
            display: inline-block;
            height: 12px;
            width: 12px;
        }

        .span-legent-green {
            background-color: #80ffaa;
        }

        .span-legent-orange {
            background-color: #ffc266;
        }

        .span-legent-red {
            background-color: #ff6666;
        }

        table {
            border-collapse: collapse;
            table-layout: fixed;
        }

        table, th, td {
            border: 1px solid #000000;
            padding-top: 2px;
            padding-bottom: 2px;
        }

        #table_fixed {
            width: 1150px;
            padding-right: 5px;
        }

        #table_scroll_container {
            height: 600px;
            overflow-y: scroll;
            width: auto;
        }

        #table_scroll {
            width: 1150px;
            margin-top: 10px;
            margin-bottom: 50px;
        }

        .col_tracking_id {
            width: 70px;
            /*overflow: hidden;*/
            /*text-overflow: ellipsis;*/
            white-space: nowrap;
            text-align: center;
        }

        .col_locaiton_from {
            width: 100px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_locaiton_from_concern {
            width: 150px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_locaiton_to {
            width: 100px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_assign_status {
            width: 160px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_trip_status {
            width: 80px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_tentative_arriving_time {
            width: 150px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_comming_vehicle_info {
            width: 250px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }

        .col_comming_vehicle_pick {
            /*width: 300;*/
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: center;
        }
    </style>
</head>

<body style="height: auto; min-height: 100%;">
    <span class="summury_data_content">
        @foreach (var FK_Location_From in Model.Item1.OrderBy(m => m.Requisition.Location.Name).GroupBy(m => m.Requisition.FK_Location_From).Select(m => m.Key).ToList())
        {
            var grouped_demand = Model.Item1.Where(m => m.Requisition.FK_Location_From == FK_Location_From).ToList();
            <!--col_summury_from-->

            var display_summury_from = "";
            display_summury_from = grouped_demand.FirstOrDefault().Requisition.Location.ShortCode != null ? grouped_demand.FirstOrDefault().Requisition.Location.ShortCode : grouped_demand.FirstOrDefault().Requisition.Location.Name;
            if (string.IsNullOrEmpty(display_summury_from))
            {
                display_summury_from = "NF";
            }
            <script>
                summury_chart_data_lebels.push('@display_summury_from');
                summury_chart_data_assigned.push(@grouped_demand.Where(m => m.FK_Vehicle != null).Count());
                summury_chart_data_unassigned.push(@grouped_demand.Where(m => m.FK_Vehicle == null).Count());
            </script>
        }
        <div style="margin-left: 5px;" class="box-body chart-responsive">
            <canvas id="barChart" style="height:100px; width: 500px;"></canvas>
        </div>
    </span>
    <!-- ChartJS -->
    <script src="~/Theme/bower_components/chart.js/2.4.0/Chart.min.js"></script>
    <script>
        $(document).ready(function () {
            //context
            var ctx = document.getElementById('barChart').getContext('2d');
            //make data
            var data = {
                labels: summury_chart_data_lebels,
                datasets: [{
                    label: "Given",
                    backgroundColor: '#9ae59a',
                    borderColor: '#9ae59a',
                    data: summury_chart_data_assigned,
                },
                {
                    label: "Not-Given",
                    backgroundColor: '#ff3300',
                    borderColor: '#ff3300',
                    data: summury_chart_data_unassigned,
                }]
            };
            //make chart
            var chart = new Chart(ctx, {
                type: 'bar',
                data: data,
                options: {
                    animation: {
                        duration: 1,
                        onComplete: function () {
                            var chartInstance = this.chart,
                                ctx = chartInstance.ctx;

                            //ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                            ctx.font = Chart.helpers.fontString(13, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'bottom';
                            ctx.fillStyle = "#000";

                            //this.data.datasets.forEach(function (dataset, i) {
                            //    var meta = chartInstance.controller.getDatasetMeta(i);
                            //    meta.data.forEach(function (bar, index) {
                            //        var data = dataset.data[index];
                            //        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                            //    });
                            //});

                            this.data.datasets.forEach(function (dataset, i) {
                                var meta = chartInstance.controller.getDatasetMeta(i);
                                meta.data.forEach(function (bar, index) {
                                    var data = summury_chart_data_assigned[index] + ' / ' + summury_chart_data_unassigned[index];
                                    if (i == 0) {
                                        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                    }
                                });
                            });
                        }
                    },
                    hover: {
                        animationDuration: 0
                    },
                    tooltips: {
                        enabled: true,
                    },
                    scales: {
                        xAxes: [{
                            stacked: true,
                            gridLines: {
                                drawOnChartArea: false
                            },
                            ticks: {
                                autoSkip: false,
                                maxRotation: 90,
                                minRotation: 90,
                                beginAtZero: true,
                                fontFamily: "Arial",
                                fontColor: "#000000",
                                fontSize: 17,
                                //fontStyle: "bold"
                            },
                        }],
                        yAxes: [{
                            stacked: true,
                            gridLines: {
                                drawOnChartArea: false
                            },
                            //ticks: {
                            //    beginAtZero: true,
                            //    fontFamily: "PTSans-Regular",
                            //    fontColor: "#000000"
                            //}
                        }]
                    },
                }
            });
        });

        setTimeout(function () {
            window.location.href = '/Requisition/DashBoard_MGT?PRG_Type=@ViewBag.PRG_Type';
        }, 1000*60*5);//5 min
    </script>
</body>
</html>