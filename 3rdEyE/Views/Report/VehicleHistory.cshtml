
@{
    ViewBag.Title = "Vehicle Movement History ";
}
@*Select2*@
<link href="~/Theme/bower_components/select2/dist/css/select2.min.css" rel="stylesheet" />
<!-- DataTables -->
<link rel="stylesheet" href="~/Theme/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
@*DateTimePicker*@
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Vehicle Movement History
        <small></small>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-info">
                <div class="box-body col-md-12">
                    <div class="form-group col-md-12">
                        <label class="col-md-2 control-label">Vehicles:</label>
                        <div class="col-md-10">
                            @Html.DropDownList("FK_Vehicle", ViewBag.Vehicles as SelectList, "Select", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="box-body col-md-12">
                    <div class="form-group col-md-4">
                        <label class="col-md-4 control-label">Starting Date:</label>
                        <div class="input-group col-md-8">
                            <div class="col-md-12 input-append date form_datetime" @*data-date="1979-09-16T05:25:07Z"*@ data-date-format="dd MM yyyy - HH:ii p" data-link-field="dtp_input1">
                                <input id="StartingDate" name="StartingDate" class="form-control col-md-12" type="text" value="" readonly="readonly" style="background-color: white;">
                                <span class="add-on"><i class="icon-remove"></i></span>
                                <span class="add-on"><i class="icon-th"></i></span>
                            </div>
                            <input type="hidden" id="dtp_input1" value="" style="display:none;" /><br />
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="col-md-4 control-label">Einding Date:</label>
                        <div class="input-group col-md-8">
                            <div class="col-md-12 input-append date form_datetime" @*data-date="1979-09-16T05:25:07Z"*@ data-date-format="dd MM yyyy - HH:ii p" data-link-field="dtp_input1">
                                <input id="EndingDate" name="EndingDate" class="form-control col-md-12" type="text" value="" readonly="readonly" style="background-color: white;">
                                <span class="add-on"><i class="icon-remove"></i></span>
                                <span class="add-on"><i class="icon-th"></i></span>
                            </div>
                            <input type="hidden" id="dtp_input2" value="" style="display:none;" /><br />
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="col-md-4 control-label">Time lap:</label>
                        <div class="col-md-8">
                            <select name="TimeLap" class="form-control">
                                <option value="1">1 Minute</option>
                                <option value="2">2 Minute</option>
                                <option value="5">5 Minute</option>
                                <option value="10">10 Minute</option>
                                <option value="30">30 Minute</option>
                                <option value="60">1 Hour</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="box-body col-md-12">
                    <button class="btn btn-facebook" onclick="getData()">Get Data</button>
                    <button class="btn btn-facebook" onclick="downloadExcel()">Download (Current)</button>
                </div>
            </div>
        </div>
        <!-- /.col -->
    </div>
    <div class="row">
        <div class="col-md-12" id="map" style="height:700px;"></div>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDVkwHNr_8HlH6zM8-mIOnKxErJKLHEpo0">
        </script>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Vehicle Movement History </h3>
                    <label id="trackingDistanceInKiloMeter" style="color:blue; font-weight:300;"></label>
                    <label id="googleDistanceInKiloMeter" style="color:green; font-weight:300;"></label>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="data_table" class="table table-bordered table-striped">
                        <thead>
                            <tr style="background-color:#3B5998; color:white;">
                                <td>Reg.No</td>
                                <td>DateTime</td>
                                <td>Speed(km/hour)</td>
                                <td>Engine Status</td>
                                <td>Location</td>
                                <td>View map</td>
                            </tr>
                        </thead>
                        <tbody id="data_tbody"></tbody>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
@*MODAL Company START*@
<div id="modalPreload" class="modal  modal-" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content" style="background-color:transparent; margin-top:200px;">
            <img src="~/Content/Images/Preload.gif" />
        </div>
    </div>
</div>
@*MODAL Company END*@
<!-- /.content -->
<!-- DataTables -->
<script src="~/Theme/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/Theme/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<!-- page script -->
@*DateTimePicker*@
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script>
    $(function () {
        //$('#data_table').DataTable({ "scrollX": true });
        $('.form_datetime').datetimepicker({
            //format: 'yyyy-mm-dd HH:ii P',
            format: 'yyyy-mm-dd HH:ii P',
            //setDate: new Date(),
            //weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            //todayHighlight: 1,
            //startView: 2,
            //forceParse: 0,
            //showMeridian: 0
            //startDate: '+0d'
        });
    });
</script>
@*Select2*@
<script src="~/Theme/bower_components/select2/dist/js/select2.min.js"></script>
<script>
    $(function () {
        $('select[name=FK_Vehicle]').select2();
    });
</script>
<script>
    function getData() {
        var FK_Vehicle = $('select[name=FK_Vehicle]').val();
        var vehicleRegNo = $("#FK_Vehicle option:selected").text();
        var StartingDate = $('Input[name=StartingDate]').val();
        var EndingDate = $('Input[name=EndingDate]').val();
        var TimeLap = $('select[name=TimeLap]').val();
        if (FK_Vehicle == '' || StartingDate == '' || EndingDate == '') {
            alert("Please, Select vehicle, starting date and ending date.");
            $('#data_tbody').html("");
            return;
        }
        $("#modalPreload").css("display", "block");
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/Report/GetVehicleHistory/",
            data: JSON.stringify({ FK_Vehicle: FK_Vehicle, StartingDate: StartingDate, EndingDate: EndingDate, TimeLap: TimeLap }),
            success: function (data) {
                //console.log(data.trackingDistanceInKiloMeter);
                if (data.list.length == 0) {
                    alert("No data is found for given condition.");
                }
                if (data.trackingDistanceInKiloMeter != 0) {
                    $("#trackingDistanceInKiloMeter").html("Approximate Tracking Distance: " + data.trackingDistanceInKiloMeter + " KM(s)");
                } else {
                    $("#trackingDistanceInKiloMeter").html("");
                }
                $('#data_tbody').html("");
                var res = "";
                for (var i = 0; i < data.list.length; i++) {
                    res = res + "<tr>";
                    res = res + "<td>" + vehicleRegNo + "</td>";
                    res = res + "<td>" + data.list[i].UpdateTime + "</td>";
                    res = res + "<td>" + data.list[i].Speed + " </td>";
                    if (data.list[i].EngineStatus == "1") {
                        res = res + "<td>" + "On" + "</td>";

                    } else {
                        res = res + "<td>" + "Off" + "</td>";

                    }
                    res = res + "<td>" + data.list[i].NearestMapLocationDistance + " k.m far from " + data.list[i].NearestMapLocation + "</td>";
                    res = res + "<td><a target='_blank' href='/Report/ShowMapWithMarker?latitude=" + data.list[i].Latitude + "&longitude=" + data.list[i].Longitude + "'>" + "Map link" + "</a></td>";
                    res = res + "</tr>";
                }
                $('#data_tbody').html(res);
                $("#modalPreload").css("display", "none");

                drop(data.list);
                drawRoute(data.list);
            },
            error: function (xhr, textStatus, errorThrown) {
                alert('Too much data to load table. Please, decrease the date-time range and try again.');
                console.log("Err on call: getData()");
                $("#modalPreload").css("display", "none");
            }
        });
    }
    function getDataToDropMap() {
        var FK_Vehicle = $('select[name=FK_Vehicle]').val();
        var vehicleRegNo = $("#FK_Vehicle option:selected").text();
        var StartingDate = $('Input[name=StartingDate]').val();
        var EndingDate = $('Input[name=EndingDate]').val();
        var TimeLap = 0;
        if (FK_Vehicle == '' || StartingDate == '' || EndingDate == '') {
            alert("Please, Select vehicle, starting date and ending date.");
            $('#data_tbody').html("");
            return;
        }
        //$("#modalPreload").css("display", "block");
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/Report/GetVehicleHistoryDetail/",
            data: JSON.stringify({ FK_Vehicle: FK_Vehicle, StartingDate: StartingDate, EndingDate: EndingDate, TimeLap: TimeLap }),
            success: function (list) {
                console.log(list);
                drop(list)
                //$("#modalPreload").css("display", "none");
            },
            error: function (xhr, textStatus, errorThrown) {
                alert('Too much data to load map-path. Please, decrease the date-time range and try again.');
                console.log("Err on call: getData()");
                //$("#modalPreload").css("display", "none");
            }
        });
    }
    function downloadExcel() {
        tableToExcel('data_table', 'Vehicle Movement History ', 'Vehicle Movement History .xls')
    }
</script>

<script>
    var map;
    var vehicle_move;
    var vehicle_nonMove;
    var vehicle_egnition_off;
    var _vehicle_move;
    var _vehicle_nonMove;
    var _vehicle_egnition_off;
    var marker;
    var markerMoveFrequency = 10;
    var intervalTime = 1000;
    //var line;
    //var linePath = [];
    var image;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 13,
            center: { lat: 23.7873, lng: 90.4274 }
            //center: { lat: 52.520, lng: 13.410 }
        });
        vehicle_move = '/Content/Images/filled_circle_green.png';
        vehicle_nonMove = '/Content/Images/filled_circle_yellow.png';
        vehicle_egnition_off = '/Content/Images/filled_circle_red.png';

        vehicle_start = '/Content/Images/start_point.png';
        vehicle_end = '/Content/Images/end_point.png';

        var iconsetngs = {
            path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
        };
        image = {
            url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(20, 32),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(0, 32)
        };
    }

    var markers = [];
    var lines = [];
    var directionsDisplay;
    function drop(list) {
        clearMarkersAndLines();
        if (list.length > 0) {
            map.setCenter({ lat: Number(list[0].Latitude), lng: Number(list[0].Longitude) });
        }
        for (var i = 0; i < list.length; i++) {
            //addMarkerWithTimeout(list[i], i * 0);
            //markers.push(new google.maps.Marker({
            //    position: { lat: Number(list[i].Latitude), lng: Number(list[i].Longitude) },
            //    map: map,
            //    icon: vehicle_move,
            //}));
            var marker = new google.maps.Marker({
                position: { lat: Number(list[i].Latitude), lng: Number(list[i].Longitude) },
                map: map,
            });

            if (i == 0) {
                marker.setIcon(vehicle_start);
            }
            else if (i > 0 && i < (list.length - 1)) {
                if (Number(list[i].Speed) > 0 && list[i].EngineStatus == "1") {
                    marker.setIcon(vehicle_move);
                }
                else if (list[i].EngineStatus == "1") {
                    marker.setIcon(vehicle_nonMove);
                }
                else if (list[i].EngineStatus == "0") {
                    marker.setIcon(vehicle_egnition_off);
                }
            }
            else {
                marker.setIcon(vehicle_end);
            }


            //# set infowindow
            var infoWindowContent = "";
            infoWindowContent = infoWindowContent + "Location: " + list[i].NearestMapLocationDistance + " km from " + list[i].NearestMapLocation + "</b><br/>";
            infoWindowContent = infoWindowContent + "Lat-Long: " + list[i].Latitude + "," + list[i].Longitude + "</b><br/>";
            infoWindowContent = infoWindowContent + "Updated: " + list[i].UpdateTime + "</b><br/>";
            infoWindowContent = infoWindowContent + "Speed: " + list[i].Speed + " km/h</b><br/>";
            infoWindowContent = infoWindowContent + "Mileage: " + list[i].Mileage + " km/h</b><br/>";
            if (list[i].EngineStatus == "1") {
                infoWindowContent = infoWindowContent + "Egnition: " + "On" + "</b><br/>";
            } else {
                infoWindowContent = infoWindowContent + "Egnition: " + "Off" + "</b><br/>";
            }
            var infowindow = new google.maps.InfoWindow()
            google.maps.event.addListener(marker, 'click', (function (marker, html, infowindow) {
                return function () {
                    infowindow.setContent(html);
                    infowindow.open(map, marker);
                };
            })(marker, infoWindowContent, infowindow));
            markers.push(marker);

            if (i < (list.length - 1)) {
                var line = new google.maps.Polyline({
                    path: [{ lat: Number(list[i].Latitude), lng: Number(list[i].Longitude) }, { lat: Number(list[i + 1].Latitude), lng: Number(list[i + 1].Longitude) }],
                    strokeColor: '#1100FC',
                    strokeOpacity: 1,
                    strokeWeight: 1.5,
                    map: map,
                    icons: [{
                        icon: {
                            path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
                        },
                        offset: '100%'
                    }]
                });
                lines.push(line);
            }

            //linePath.push({ lat: Number(list[i].Latitude), lng: Number(list[i].Longitude) });
            //line.setPath(linePath);
        }
    }
    function drawRoute(list) {
        var increment = Math.ceil(list.length / 25);
        var start = new google.maps.LatLng(list[0].Latitude, list[0].Longitude);
        var waypts = [];
        for (var i = increment; i < list.length; i = i + increment) {
            waypts.push({
                location: new google.maps.LatLng(list[i].Latitude, list[i].Longitude),
                stopover: true
            });
        }
        var end = new google.maps.LatLng(list[list.length - 1].Latitude, list[list.length - 1].Longitude);
        var request = {
            origin: start,
            destination: end,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode.DRIVING
        };
        var directionsService = new google.maps.DirectionsService();
        directionsDisplay = new google.maps.DirectionsRenderer;
        directionsService.route(request, function (response, status) {
            //console.log(response);
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                directionsDisplay.setMap(map);
                var googleDistanceInMeter = 0;
                for (var j = 0; j < response.routes[0].legs.length; j++) {
                    googleDistanceInMeter = googleDistanceInMeter + response.routes[0].legs[j].distance.value;
                }
                var googleDistanceInKiloMeter = (googleDistanceInMeter / 1000).toFixed(2);
                $("#googleDistanceInKiloMeter").html("Approximate Google Distance: " + googleDistanceInKiloMeter + " KM(s)");
            } else {
                $("#googleDistanceInKiloMeter").html("");
                //console.log(status);
            }
        });
    }

    function addMarkerWithTimeout(item, timeout) {
        window.setTimeout(function () {
            if (Number(item.Speed) > 0) {
                markers.push(new google.maps.Marker({
                    position: { lat: Number(item.Latitude), lng: Number(item.Longitude) },
                    map: map,
                    icon: vehicle_move,
                    animation: google.maps.Animation.DROP
                }));
            }
            else if (item.EngineStatus == "1") {
                markers.push(new google.maps.Marker({
                    position: { lat: Number(item.Latitude), lng: Number(item.Longitude) },
                    map: map,
                    icon: vehicle_nonMove,
                    animation: google.maps.Animation.DROP
                }));
            }
            else if (item.EngineStatus == "0") {
                markers.push(new google.maps.Marker({
                    position: { lat: Number(item.Latitude), lng: Number(item.Longitude) },
                    map: map,
                    icon: vehicle_egnition_off,
                    animation: google.maps.Animation.DROP
                }));
            }

        }, timeout);
    }

    function clearMarkersAndLines() {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
        markers = [];

        for (var i = 0; i < lines.length; i++) {
            lines[i].setMap(null);
        }
        lines = [];

        if (directionsDisplay != null) {
            directionsDisplay.setMap(null);
        }
    }
    $(document).ready(function () {
        setTimeout(initMap, 10000);
    });


</script>